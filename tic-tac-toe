package ui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Arrays;

public class XandO {

    JFrame frame;
    JPanel welcomePanel, gamePanel, gridPanel;
    JTextField player1Field, player2Field;
    JLabel turnLabel;
    JButton[] buttons = new JButton[9];
    ArrayList<Integer> playerOne = new ArrayList<>();
    ArrayList<Integer> playerTwo = new ArrayList<>();
    boolean isPlayerOneTurn = true;
    String player1Name = "Player 1";
    String player2Name = "Player 2";

    public static void main(String[] args) {
        new XandO();
    }

    public XandO() {
        WelcomeScreen();
    }

void WelcomeScreen() {
        frame = new JFrame("Welcome to X and O");
        welcomePanel = new JPanel(new GridLayout(4, 2, 10, 10));
        welcomePanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        welcomePanel.add(new JLabel("Enter Player 1 Name:"));
        player1Field = new JTextField();
        welcomePanel.add(player1Field);

        welcomePanel.add(new JLabel("Enter Player 2 Name:"));
        player2Field = new JTextField();
        welcomePanel.add(player2Field);

        JButton startButton = new JButton("Start Game");
        startButton.setBackground(Color.BLACK);
        startButton.setForeground(Color.WHITE);
        startButton.addActionListener(e -> startGame());

        welcomePanel.add(new JLabel()); // filler
        welcomePanel.add(startButton);

        frame.add(welcomePanel);
        frame.setSize(400, 250);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

void startGame() {
        player1Name = player1Field.getText().trim().isEmpty() ? "Player 1" : player1Field.getText().trim();
        player2Name = player2Field.getText().trim().isEmpty() ? "Player 2" : player2Field.getText().trim();

        frame.remove(welcomePanel);
        drawGameBoard();
    }

    void drawGameBoard() {
        gamePanel = new JPanel(new BorderLayout());
        turnLabel = new JLabel(player1Name + "'s turn (X)", SwingConstants.CENTER);
        turnLabel.setFont(new Font("Arial", Font.BOLD, 16));
        turnLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 10, 0));

        gridPanel = new JPanel(new GridLayout(3, 3, 5, 5));
        gridPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        for (int i = 0; i < 9; i++) {
            JButton btn = new JButton("");
            btn.setFont(new Font("Arial", Font.BOLD, 40));
            btn.setBackground(Color.BLACK); // black background
            btn.setForeground(Color.WHITE); // white "X" or "O"
            btn.setFocusPainted(false);
            int index = i + 1;
            buttons[i] = btn;
            btn.addActionListener(e -> handleMove(btn, index));
            gridPanel.add(btn);
        }

JButton resetBtn = new JButton("Restart");
        resetBtn.setBackground(Color.BLACK);
        resetBtn.setForeground(Color.WHITE);
        resetBtn.addActionListener(e -> resetGame());

        gamePanel.add(turnLabel, BorderLayout.NORTH);
        gamePanel.add(gridPanel, BorderLayout.CENTER);
        gamePanel.add(resetBtn, BorderLayout.SOUTH);

        frame.add(gamePanel);
        frame.setSize(400, 500);
        frame.setVisible(true);
        frame.revalidate();
        frame.repaint();
    }

    void handleMove(JButton btn, int index) {
        if (!btn.getText().equals("")) return;

        if (isPlayerOneTurn) {
            btn.setText("X");
            playerOne.add(index);
            turnLabel.setText(player2Name + "'s turn (O)");
        } else {
            btn.setText("O");
            playerTwo.add(index);
            turnLabel.setText(player1Name + "'s turn (X)");
        }

        if (checkWin()) {
            String winner = isPlayerOneTurn ? player1Name : player2Name;
            JOptionPane.showMessageDialog(frame, winner + " wins!");
            disableButtons();
        } else if (playerOne.size() + playerTwo.size() == 9) {
            JOptionPane.showMessageDialog(frame, "It's a draw!");
        } else {
            isPlayerOneTurn = !isPlayerOneTurn;
        }
    }


    boolean checkWin() {
        int[][] winPatterns = {
                {1,2,3}, {4,5,6}, {7,8,9},
                {1,4,7}, {2,5,8}, {3,6,9},
                {1,5,9}, {3,5,7}
        };

        ArrayList<Integer> currentPlayer = isPlayerOneTurn ? playerOne : playerTwo;
        for (int[] pattern : winPatterns) {
            if (currentPlayer.containsAll(Arrays.asList(pattern[0], pattern[1], pattern[2]))) {
                return true;
            }
        }
        return false;
    }

    void resetGame() {
        playerOne.clear();
        playerTwo.clear();
        isPlayerOneTurn = true;
        turnLabel.setText(player1Name + "'s turn (X)");
        for (JButton btn : buttons) {
            btn.setText("");
            btn.setEnabled(true);
        }
    }

    void disableButtons() {
        for (JButton btn : buttons) {
            btn.setEnabled(false);
        }
    }
}
